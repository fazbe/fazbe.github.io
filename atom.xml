<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Faz-B</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fazbe.github.io/"/>
  <updated>2020-09-04T13:55:05.523Z</updated>
  <id>https://fazbe.github.io/</id>
  
  <author>
    <name>Faz-B Man</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Usando o paho-mqtt para Python</title>
    <link href="https://fazbe.github.io/Usando-o-paho-mqtt-para-Python/"/>
    <id>https://fazbe.github.io/Usando-o-paho-mqtt-para-Python/</id>
    <published>2017-02-18T12:08:54.000Z</published>
    <updated>2020-09-04T13:55:05.523Z</updated>
    
    <content type="html"><![CDATA[<p>Bom, você já deve entender de Python né? Senão, estude e volte aqui.</p><p>O lance aqui é simples com <a href="https://eclipse.org/paho/" target="_blank" rel="noopener">paho-mqtt</a>, para ouvir um tópico, façamos o seguinte:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Para instalar o paho-mqtt use o comando pip install paho-mqtt</span></span><br><span class="line"><span class="keyword">import</span> paho.mqtt.client <span class="keyword">as</span> mqtt</span><br><span class="line"></span><br><span class="line"><span class="comment"># The callback for when the client receives a CONNACK response from the server.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_connect</span><span class="params">(client, userdata, flags, rc)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># O subscribe fica no on_connect pois, caso perca a conexão ele a renova</span></span><br><span class="line">    <span class="comment"># Lembrando que quando usado o #, você está falando que tudo que chegar após a barra do topico, será recebido</span></span><br><span class="line">    client.subscribe(<span class="string">"topico/#"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Callback responável por receber uma mensagem publicada no tópico acima</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_message</span><span class="params">(client, userdata, msg)</span>:</span></span><br><span class="line">    print(msg.topic+<span class="string">" -  "</span>+str(msg.payload))</span><br><span class="line"></span><br><span class="line">client = mqtt.Client()</span><br><span class="line">client.on_connect = on_connect</span><br><span class="line">client.on_message = on_message</span><br><span class="line"></span><br><span class="line"><span class="comment"># Seta um usuário e senha para o Broker, se não tem, não use esta linha</span></span><br><span class="line">client.username_pw_set(<span class="string">"USUARIO"</span>, password=<span class="string">"SENHA"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Conecta no MQTT Broker, no meu caso, o Mosquitto</span></span><br><span class="line">client.connect(<span class="string">"IP_OU_URL_BROKER"</span>, PORTA, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Inicia o loop</span></span><br><span class="line">client.loop_forever()</span><br></pre></td></tr></table></figure></p><p>Para publicar, faça o seguinte<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Importa o publish do paho-mqtt</span></span><br><span class="line"><span class="keyword">import</span> paho.mqtt.publish <span class="keyword">as</span> publish</span><br><span class="line"></span><br><span class="line"><span class="comment"># Publica</span></span><br><span class="line">publish.single(<span class="string">"topico/teste"</span>, <span class="string">"Oi, aqui é um teste"</span>, hostname=<span class="string">"IP_OU_URL_BROKER"</span>)</span><br></pre></td></tr></table></figure></p><p>Na publicação, você passa todos os parâmetros no publish, como QOS, porta, auth e etc. Tudo muito fácil né? Quer saber mais? <a href="https://eclipse.org/paho/clients/python/docs/" target="_blank" rel="noopener">Leia a documentação do paho-mqtt</a></p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Usando o paho-mqtt para Python
    
    </summary>
    
      <category term="python" scheme="https://fazbe.github.io/categories/python/"/>
    
      <category term="mqtt" scheme="https://fazbe.github.io/categories/python/mqtt/"/>
    
      <category term="mosquitto" scheme="https://fazbe.github.io/categories/python/mqtt/mosquitto/"/>
    
    
  </entry>
  
  <entry>
    <title>Mostrar informações das portas USB no Mac</title>
    <link href="https://fazbe.github.io/Mostrar-informacoes-das-portas-USB-no-Mac/"/>
    <id>https://fazbe.github.io/Mostrar-informacoes-das-portas-USB-no-Mac/</id>
    <published>2017-02-18T12:05:44.000Z</published>
    <updated>2020-09-04T13:54:32.899Z</updated>
    
    <content type="html"><![CDATA[<p>Só abrir o <a href="https://tecnologia.umcomo.com.br/artigo/como-abrir-o-terminal-em-computadores-mac-3950.html" target="_blank" rel="noopener">Terminal</a> e digitar o comando:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system_profiler SPUSBDataType</span><br></pre></td></tr></table></figure></p><p>Irá aparecer algo como:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">USB:</span><br><span class="line"></span><br><span class="line">    USB 2.0 Bus:</span><br><span class="line"></span><br><span class="line">      Host Controller Driver: AppleUSBEHCIPCI</span><br><span class="line">      PCI Device ID: 0x1e2d</span><br><span class="line">      PCI Revision ID: 0x0004</span><br><span class="line">      PCI Vendor ID: 0x8086</span><br><span class="line"></span><br><span class="line">        Hub:</span><br><span class="line"></span><br><span class="line">          Product ID: 0x0024</span><br><span class="line">          Vendor ID: 0x8087  (Intel Corporation)</span><br><span class="line">          Version: 0.00</span><br><span class="line">          Speed: Up to 480 Mb/sec</span><br><span class="line">          Location ID: 0x1a100000 / 1</span><br><span class="line">          Current Available (mA): 1000</span><br><span class="line">          Current Required (mA): 0</span><br><span class="line">          Extra Operating Current (mA): 0</span><br><span class="line">          Built-In: Yes</span><br></pre></td></tr></table></figure></p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Mostrar informações das portas USB no Mac
    
    </summary>
    
      <category term="mac" scheme="https://fazbe.github.io/categories/mac/"/>
    
      <category term="terminal" scheme="https://fazbe.github.io/categories/mac/terminal/"/>
    
    
  </entry>
  
  <entry>
    <title>Abrir pasta do Finder no Terminal e vice-versa no Mac</title>
    <link href="https://fazbe.github.io/Abrir-pasta-do-Finder-no-Terminal-e-vice-versa-no-Mac/"/>
    <id>https://fazbe.github.io/Abrir-pasta-do-Finder-no-Terminal-e-vice-versa-no-Mac/</id>
    <published>2017-02-18T12:04:22.000Z</published>
    <updated>2020-09-04T13:53:24.434Z</updated>
    
    <content type="html"><![CDATA[<p>Eu acredito que você já saiba trabalhar no Terminal do Mac, configurar e usar inclusive o bash_profile. Se não sabe, <a href="https://nandovieira.com.br/configurando-o-terminal-no-mac-os-x" target="_blank" rel="noopener">dê uma olhada aqui</a> e <a href="http://www.vitorbritto.com.br/blog/adicionando-caminhos-na-variavel-de-ambiente-PATH/" target="_blank" rel="noopener">aqui também</a></p><p>Certo, vamos criar uma função no nosso arquivo de configuração <strong>.bash_profile</strong> normalmente no Mac ele fica no diretório base do seu usuário.</p><p>Para abrir uma pasta que está ativa no Finder dentro do Terminal:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">finder_term</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Neste caso "of" é somente um alias customizado criado para excução</span></span><br><span class="line">    of=`osascript -e <span class="string">'tell application "Finder" to if (count of Finder windows) &gt; 0 then get POSIX path of (target of front Finder window as text)'</span>` &amp;&amp; [ -n <span class="string">"<span class="variable">$of</span>"</span> ] &amp;&amp; <span class="built_in">cd</span> <span class="string">"<span class="variable">$of</span>"</span> &amp;&amp; <span class="built_in">pwd</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Para abrir uma pasta que está ativa no Terminal dentro do Finder. Neste caso não iremos criar uma função e sim um <strong>alias</strong>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> term_finder=<span class="string">'open -a Finder .'</span></span><br></pre></td></tr></table></figure></p><p>Pronto, salve o seu arquivo .bash_profile e “atualize” ele digitando no Terminal o comando:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>Para testar, <strong>abra uma pasta no Finder</strong> e com ela ativa, abra o Terminal e digite:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">finder_term</span><br></pre></td></tr></table></figure></p><p>Pressione RETURN/ENTER e ele vai abrir a pasta do Finder <strong>dentro do seu Terminal</strong>.</p><p>Pronto, agora <strong>feche a janela do Finder</strong> e na mesma janela do Terminal digite:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">term_finder</span><br></pre></td></tr></table></figure></p><p>Pressione RETURN/ENTER e ele vai abrir a pasta do Terminal <strong>em uma janela do Finder</strong>.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Abrir pasta do Finder no Terminal e vice-versa no Mac
    
    </summary>
    
      <category term="mac" scheme="https://fazbe.github.io/categories/mac/"/>
    
      <category term="terminal" scheme="https://fazbe.github.io/categories/mac/terminal/"/>
    
      <category term="applescript" scheme="https://fazbe.github.io/categories/mac/terminal/applescript/"/>
    
    
  </entry>
  
  <entry>
    <title>Lei de Ohm e Resistores, você conhece e sabe?</title>
    <link href="https://fazbe.github.io/Lei-de-Ohm-e-Resistores-voce-conhece-e-sabe/"/>
    <id>https://fazbe.github.io/Lei-de-Ohm-e-Resistores-voce-conhece-e-sabe/</id>
    <published>2017-02-18T12:03:53.000Z</published>
    <updated>2020-09-04T13:54:22.832Z</updated>
    
    <content type="html"><![CDATA[<p>Um dos componentes eletrônicos mais usados pelo menos quando o assunto é Arduino e seus agregados, é o resistor. No início é complicado mas com o tempo você vai pegando o jeito. E não se preocupe também, na internet hoje em dia tem MUITO material para estudar, prontos e etc.</p><p>Existem diversos vídeos bem complexos e com muita teoria, cálculos e mais cálculos, então selecionei dois que são bem diretos e explica bem!</p><p>Selecionei alguns vídeos legais, que falam sobre resistores e a tal lei de ohm.</p><div class="video-container"><iframe src="//www.youtube.com/embed/LQGUwEe915I" frameborder="0" allowfullscreen></iframe></div><p>Como calcular o resistor adequado</p><div class="video-container"><iframe src="//www.youtube.com/embed/h9oK4o63Kvs" frameborder="0" allowfullscreen></iframe></div><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Lei de Ohm e Resistores, você conhece e sabe?
    
    </summary>
    
      <category term="eletronica" scheme="https://fazbe.github.io/categories/eletronica/"/>
    
    
  </entry>
  
  <entry>
    <title>NodeMCU, conheça esta plaquinha com ESP8266</title>
    <link href="https://fazbe.github.io/NodeMCU-conheca-esta-plaquinha-com-ESP8266/"/>
    <id>https://fazbe.github.io/NodeMCU-conheca-esta-plaquinha-com-ESP8266/</id>
    <published>2017-02-18T12:02:15.000Z</published>
    <updated>2020-09-04T13:54:36.223Z</updated>
    
    <content type="html"><![CDATA[<p>Ótimo vídeo da <a href>Navarro Eletrônica</a></p><div class="video-container"><iframe src="//www.youtube.com/embed/d91YqbND8A8" frameborder="0" allowfullscreen></iframe></div><p>Por aqui usamos ela para diversas aplicações, de sensores até controles de acessos.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      NodeMCU, conheça esta plaquinha com ESP8266
    
    </summary>
    
      <category term="nodemcu" scheme="https://fazbe.github.io/categories/nodemcu/"/>
    
      <category term="esp8266" scheme="https://fazbe.github.io/categories/nodemcu/esp8266/"/>
    
    
  </entry>
  
  <entry>
    <title>Requisições HTTP com Python</title>
    <link href="https://fazbe.github.io/Requisicoes-HTTP-com-Python/"/>
    <id>https://fazbe.github.io/Requisicoes-HTTP-com-Python/</id>
    <published>2017-02-18T12:01:28.000Z</published>
    <updated>2020-09-04T13:54:57.762Z</updated>
    
    <content type="html"><![CDATA[<p>Conheça o <a href="https://requests.readthedocs.io/pt_BR/latest/" target="_blank" rel="noopener">Python HTTP for Humans</a> não vou aprofundar em nada, mas fica a dica. Na <a href="https://requests.readthedocs.io/pt_BR/latest/" target="_blank" rel="noopener">documentação</a> deles, tem tudo. Só ler, aprender e executar, tudo em português.</p><p>Por aqui estamos utilizando para se comunicar com uma <a href="https://canaltech.com.br/o-que-e/software/o-que-e-api/" target="_blank" rel="noopener">API</a> desenvolvida em <a href="https://laravel.com/docs" target="_blank" rel="noopener">Laravel</a> que recebe e trata dados de uma aplicação de <a href="http://computerworld.com.br/dez-aplicacoes-possiveis-do-conceito-de-internet-das-coisas-em-pmes" target="_blank" rel="noopener">IoT</a>.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Requisições HTTP com Python
    
    </summary>
    
      <category term="python" scheme="https://fazbe.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>Verificando se um conteúdo ou palavra existe dentro de arquivos com PHP e Laravel</title>
    <link href="https://fazbe.github.io/Verificando-se-um-conteudo-ou-palavra-existe-dentro-de-arquivos-com-PHP-e-Laravel/"/>
    <id>https://fazbe.github.io/Verificando-se-um-conteudo-ou-palavra-existe-dentro-de-arquivos-com-PHP-e-Laravel/</id>
    <published>2017-02-16T17:21:03.000Z</published>
    <updated>2020-09-04T13:55:08.868Z</updated>
    
    <content type="html"><![CDATA[<p>Isso mesmo que você leu. Sem enrolação vamos executar esse código logo. Mais uma vez, como na postagem anterior, iremos criar como uma função simples, mas você usa como quiser.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!function_exists((<span class="string">'file_has_content'</span>))) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">file_has_content</span><span class="params">($file, $subject)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str_contains(file_get_contents(base_path($file)), $subject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Para usar é simples, levando em consideração que usa dois helpers do Laravel, o <a href="https://laravel.com/docs/5.4/helpers#method-str-contains" target="_blank" rel="noopener">str_contains</a> e o <a href="https://laravel.com/docs/5.4/helpers#method-base-path" target="_blank" rel="noopener">base_path</a>, vamos fazer o seguinte:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_has_content(<span class="string">'composer.json'</span>, <span class="string">'require-dev'</span>);</span><br></pre></td></tr></table></figure><p>Provavelmente o código acima irá retornar <strong>true</strong> uma vez que na instalação padrão do Laravel, existe <strong>require-dev</strong> no <strong>composer.json</strong> que está na base do projeto Laravel.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Verificando se um conteúdo ou palavra existe dentro de arquivos com PHP e Laravel
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Turbine as Collection do Laravel com o Laravel Collection Macros da Spatie</title>
    <link href="https://fazbe.github.io/Turbine-as-Collection-do-Laravel-com-o-Laravel-Collection-Macros-da-Spatie/"/>
    <id>https://fazbe.github.io/Turbine-as-Collection-do-Laravel-com-o-Laravel-Collection-Macros-da-Spatie/</id>
    <published>2017-02-16T17:19:47.000Z</published>
    <updated>2020-09-04T13:55:01.612Z</updated>
    
    <content type="html"><![CDATA[<p>Que as <a href="https://laravel.com/docs/collections" target="_blank" rel="noopener">Collections do Laravel</a> são legais e que ajudam muito na hora de desenvolver todo mundo sabe. Mas em muitas ocasiões faltam funções que precisamos e não existe, para isso você tem duas opções, criar suas próprias collections ou usar pacotes de terceiros.</p><p>É ai que entra a <a href="https://spatie.be/en/opensource/laravel" target="_blank" rel="noopener">Spatie</a>, eles criaram um pacote para Laravel, o <a href="https://github.com/spatie/laravel-collection-macros" target="_blank" rel="noopener">Laravel Collection Macros</a>.</p><p>Mesmo assim, no nosso caso aqui na empresa ainda faltam algumas funções, mas enfim, o foco aqui não é falar disso e isso também <strong>não tira o mérito do pacote da Spatie</strong>.</p><p>Hoje em dia, AINDA vejo MUITOS programadores resistentes a usar pacotes e até mesmo frameworks, acreditam?</p><p>Poisé, eu mesmo não acredito! Particularmente acho isso muita ignorância mas não julgo ninguém, em toda minha experiência posso falar com toda a certeza, usar pacotes de terceiros e frameworks não é uma vergonha e sim um ganho gigantesco de tempo e sem perder a qualidade do seu desenvolvimento.</p><p>Então meu amigo, <strong>a menos que você esteja entrando no mundo da programação agora e não entende de nada AINDA</strong>, use e abuse de pacotes e frameworks.</p><p>Mas voltando ao pacote, para instalar vá a pasta do seu projeto Laravel e use o <a href="https://tableless.com.br/composer-para-iniciantes/" target="_blank" rel="noopener">composer</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require spatie/laravel-collection-macros</span><br></pre></td></tr></table></figure></p><p>Depois, adicione o provider no arquivo <strong>app.php</strong> que está na pasta <strong>config</strong> dentro da pasta do seu projeto Laravel<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Spatie\CollectionMacros\CollectionMacroServiceProvider::class,</span><br></pre></td></tr></table></figure></p><p>E depois? Use, use e use! Para saber quais <strong>collections</strong> o pacote possui, entra la <a href="https://github.com/spatie/laravel-collection-macros" target="_blank" rel="noopener">no Github deles</a>, tem tudo! Os que mais usamos aqui são:</p><ul><li><a href="https://github.com/spatie/laravel-collection-macros#range" target="_blank" rel="noopener">range()</a></li><li><a href="https://github.com/spatie/laravel-collection-macros#dd" target="_blank" rel="noopener">dd()</a></li><li><a href="https://github.com/spatie/laravel-collection-macros#validate" target="_blank" rel="noopener">validate()</a></li><li><a href="https://github.com/spatie/laravel-collection-macros#ifempty" target="_blank" rel="noopener">ifEmpty()</a></li></ul><p> Rapaiz, o <strong>dd()</strong> usado nesse contexto ai, é sinistrão!</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Turbine as Collection do Laravel com o Laravel Collection Macros da Spatie
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Quer aprender a programar para web sem enrolação?</title>
    <link href="https://fazbe.github.io/Quer-aprender-a-programar-para-web-sem-enrolacao/"/>
    <id>https://fazbe.github.io/Quer-aprender-a-programar-para-web-sem-enrolacao/</id>
    <published>2017-02-16T17:18:37.000Z</published>
    <updated>2020-09-04T13:54:54.612Z</updated>
    
    <content type="html"><![CDATA[<p>Quer aprender a programar sem frescura? Deixa eu dar uma dica então. Eu aprendi a programar em 1 mês (a 17 anos atrás, lembrando que isto está sendo escrito em 2017), na minha época tudo era mais difícil, mais complicado, nem internet eu tinha só livros (em portugês) e uma documentação em inglês que não adiantava de nada porquê eu não sabia inglês.</p><p>Hoje em dia, tem muito, muito, mas muito conteúdo grátis por ai, para ser explorado e estudado. <strong>Já falei, que tem muito mesmo?</strong> Mas para facilitar, reuni alguns cursos grátis que eu acredito ser um (ótimo) ponta pé inicial. Melhor que muitos pagos por ai.</p><hr><h2 id="Curso-de-Algoritmo-e-Logica"><a href="#Curso-de-Algoritmo-e-Logica" class="headerlink" title="Curso de Algoritmo e Lógica"></a>Curso de Algoritmo e Lógica</h2><p><a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dmSj0MHol_aoNYCSGFqvfXV" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLHz_AreHm4dmSj0MHol_aoNYCSGFqvfXV</a></p><h2 id="Curso-HTML5-Completo"><a href="#Curso-HTML5-Completo" class="headerlink" title="Curso HTML5 Completo"></a>Curso HTML5 Completo</h2><p><a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dlAnJ_jJtV29RFxnPHDuk9o" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLHz_AreHm4dlAnJ_jJtV29RFxnPHDuk9o</a></p><h2 id="Curso-de-Banco-de-Dados-MySQL"><a href="#Curso-de-Banco-de-Dados-MySQL" class="headerlink" title="Curso de Banco de Dados MySQL"></a>Curso de Banco de Dados MySQL</h2><p><a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dkBs-795Dsgvau_ekxg8g1r" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLHz_AreHm4dkBs-795Dsgvau_ekxg8g1r</a></p><h2 id="Curso-PHP-Iniciantes"><a href="#Curso-PHP-Iniciantes" class="headerlink" title="Curso PHP Iniciantes"></a>Curso PHP Iniciantes</h2><p><a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dm4beCCCmW4xwpmLf6EHY9k" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLHz_AreHm4dm4beCCCmW4xwpmLf6EHY9k</a></p><h2 id="Curso-de-POO-PHP-Programacao-Orientada-a-Objetos"><a href="#Curso-de-POO-PHP-Programacao-Orientada-a-Objetos" class="headerlink" title="Curso de POO PHP (Programação Orientada a Objetos)"></a>Curso de POO PHP (Programação Orientada a Objetos)</h2><p><a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dmGuLII3tsvryMMD7VgcT7x" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLHz_AreHm4dmGuLII3tsvryMMD7VgcT7x</a></p><hr><p>Tem MUITAS outras coisas para aprender mas o básico é isso, te aconselho a iniciar do primeiro para o último. O <a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dmSj0MHol_aoNYCSGFqvfXV" target="_blank" rel="noopener"><strong>Curso de Algoritmo e Lógica</strong></a> e o <a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dlAnJ_jJtV29RFxnPHDuk9o" target="_blank" rel="noopener"><strong>Curso HTML5 Completo</strong></a> são os principais para quem quer começar a programar e já focar em web.</p><p>Dai você me fala “<strong>Quanta coisa, a neim to com preguiça!</strong>“.</p><p>Eu também tive preguiça no início quando vi um livro de mais de mil páginas, eu li todas? <strong>Claro que não (kkk)</strong>.</p><p>Na medida que eu fui entendendo como as coisas funcionavam logo no início do livro, eu comecei a fazer testes reais e fui testando, no que fui testando também fui encontrando erros e aprendendo com eles.</p><p><strong>Tempo quem perde é relógio sem pilha meu chapa! Sabia?</strong></p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Quer aprender a programar para web sem enrolação? Nós te mostramos o caminho!
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pub / Sub com Laravel e Redis</title>
    <link href="https://fazbe.github.io/Pub-Sub-com-Laravel-e-Redis/"/>
    <id>https://fazbe.github.io/Pub-Sub-com-Laravel-e-Redis/</id>
    <published>2017-02-16T17:15:26.000Z</published>
    <updated>2020-09-04T13:54:49.564Z</updated>
    
    <content type="html"><![CDATA[<p>Eu nem precisava fazer este artigo, pois na <a href="https://laravel.com/docs/redis#pubsub" target="_blank" rel="noopener">documentação do laravel</a> tem exemplos, explica tudo. Mas beleza!</p><p>Para quem não sabe, Redis é um banco de dados NoSQL e ele funciona com a idéia de chave-valor. O valor (e também a chave) pode ser qualquer coisa, eu uso muito para arrays e até mesmo para views que não mudam muito e podem ser cacheadas para carregar uma página web mais rápido. Se quiser saber mais sobre Redis, da-lhe Google.</p><p>O Laravel é um framework para PHP robusto e que faz praticamente tudo o que você precisar, é simplesmente perfeito! Na empresa, usamos ele em todos os nosso projetos. Claro, usamos outras tecnologias também, mas a base de tudo gira em torno do Laravel.</p><p>Primeiro, precisamos criar um comando no <a href="https://laravel.com/docs/artisan" target="_blank" rel="noopener">Artisan</a> para testarmos o nosso Subscribe.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:<span class="built_in">command</span> SubTestCommand</span><br></pre></td></tr></table></figure></p><p>Isso, agora vai lá no seu arquivo SubTestCommand.php, adicione a Facade do Redis:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Redis</span>;</span><br></pre></td></tr></table></figure><p>Dê uma assinatura pra ele “<strong>redis:subscribe</strong>“, uma descrição “<strong>Redis subscribe test</strong>“ ou qualquer outra descrição que você quiser, ou copie como está na <a href="https://laravel.com/docs/redis#pubsub" target="_blank" rel="noopener">documentação do laravel</a>, você quem sabe.</p><p>Continuando… No método <strong>handle</strong> que é onde executa o comando, coloque o seguinte:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Redis::psubscribe([<span class="string">'casa/*'</span>], <span class="function"><span class="keyword">function</span> <span class="params">($message, $channel)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// $message é a mensagem recebida, obviamente</span></span><br><span class="line">    <span class="comment">// $channel é o canal o qual foi enviada a publicação</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"\nMensagem: "</span>.$message.<span class="string">"\n\nCanal: "</span>.json_encode(explode(<span class="string">'/'</span>, $channel)).<span class="string">"\n"</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Na <a href="https://laravel.com/docs/redis#pubsub" target="_blank" rel="noopener">documentação do laravel</a> existe duas formas de usar o subscribe, que é <strong>Redis::subscribe()</strong> e <strong>Redis::psubscribe()</strong> a diferença entre um e outro é que o primeiro não aceita curinga (wildcard) e o segundo aceita. Mas, se você quer saber mais, olhe ai na documentação, lá explica tudo. Mas o que eu expliquei aqui já é o suficiente acredito.</p><p>Beleza, tudo lindo e funcionando até agora. Mas temos que executar o comando e criar um publish né? Certo, para executar o comando que criamos no Laravel faça o seguinte<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan redis:subscribe</span><br></pre></td></tr></table></figure></p><p>Certo, agora precisamos enviar uma publicação para o canal “<strong>casa</strong>“, para testes vamos usar o <a href="https://github.com/laravel/tinker" target="_blank" rel="noopener">Laravel Tinker</a>, corre lá no terminal, onde está instalado o Laravel que você está usando para testes, e digite o comando:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan tinker</span><br></pre></td></tr></table></figure></p><p>O Tinker será iniciado e nele iremos digitar o seguinte:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Support\Facades\Redis::publish(<span class="string">'casa/sala'</span>, json_encode([<span class="string">'comando'</span> =&gt; <span class="string">'ligar-luz'</span>]));</span><br></pre></td></tr></table></figure></p><p>Repare que na janela do terminal onde está executando o comando <strong>artisan redis:subscribe</strong> irá receber uma mensagem. Pronto, agora faça a seu gosto.</p><p>No artigo, eu usei exemplo enviando um comando para uma casa, mas, você pode usar isso em qualquer lugar, seja software, hardware ou <a href="http://devtecnologia.com.br/internet-das-coisas-iot/" target="_blank" rel="noopener">IoT</a>, até porquê quando se diz respeito a <a href="http://devtecnologia.com.br/internet-das-coisas-iot/" target="_blank" rel="noopener">IoT</a> eu prefiro usar o MQTT.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Use o Pub / Sub com Laravel e Redis
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Procure portas no macOS e saiba quais processos estão usando elas</title>
    <link href="https://fazbe.github.io/Procure-portas-no-macOS-e-saiba-quais-processos-estao-usando-elas/"/>
    <id>https://fazbe.github.io/Procure-portas-no-macOS-e-saiba-quais-processos-estao-usando-elas/</id>
    <published>2017-02-16T17:12:03.000Z</published>
    <updated>2020-09-04T13:54:45.161Z</updated>
    
    <content type="html"><![CDATA[<p>Olha essa linha de comando que coisinha mais simples e cheia de graça.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i tcp:8000</span><br></pre></td></tr></table></figure></p><p>Falei macOS, mas estou usando o OS X El Capitain. Na linha acima, vai mostrar o seguinte<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COMMAND   PID   USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME</span><br><span class="line">VBoxHeadl 2011 wow   24u  IPv4 0xd0e6a899f3a4fa03      0t0  TCP *:irdmi (LISTEN)</span><br></pre></td></tr></table></figure></p><p>Na minha porta 8000 quem (ou o quê) está usando é o <a href="https://pt.wikipedia.org/wiki/VirtualBox" target="_blank" rel="noopener">Virtual Box</a> rodando o <a href="https://laravel.com/docs" target="_blank" rel="noopener">Laravel</a> <a href="https://laravel.com/docs/homestead" target="_blank" rel="noopener">Homestead</a>.</p><p>Não tem Mac? Fazer o quê, demorei a ter um também! Paciência!</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Procure portas no macOS e saiba quais processos estão usando elas
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Precisando de um Cliente MQTT para usar no Arduino?</title>
    <link href="https://fazbe.github.io/Precisando-de-um-Cliente-MQTT-para-usar-no-Arduino/"/>
    <id>https://fazbe.github.io/Precisando-de-um-Cliente-MQTT-para-usar-no-Arduino/</id>
    <published>2017-02-16T17:10:38.000Z</published>
    <updated>2020-09-04T13:54:41.846Z</updated>
    
    <content type="html"><![CDATA[<p>Não vou explicar como instalar uma Biblioteca na <a href="https://www.arduino.cc/en/main/software" target="_blank" rel="noopener">Arduino IDE</a>, está cheio de tutoriais no Google, de qualquer forma, <a href="http://labdegaragem.com/profiles/blogs/tutorial-arduino-instalando-bibliotecas" target="_blank" rel="noopener">aqui tem um</a>, <a href="http://fritzenlab.com.br/2016/02/como-instalar-novas-bibliotecas-na-ide-do-arduino/" target="_blank" rel="noopener">aqui tem outro</a> e <a href="https://www.youtube.com/watch?v=C1U4KvMbhJk" target="_blank" rel="noopener">aqui tem mais outro (vídeo)</a> tutorial.</p><p>Então, conheça o <a href="https://github.com/knolleary/pubsubclient" target="_blank" rel="noopener">PubSubClient</a>, esse caboco é danado! Todos sabemos (ou não) que o <a href="https://blog.butecopensource.org/mqtt-parte-1-o-que-e-mqtt/" target="_blank" rel="noopener"><strong>MQTT</strong></a> trabalha com publicações e subscrições!</p><p>Não entendeu? Bora lá então, quando você envia um comando para um servidor <a href="https://blog.butecopensource.org/mqtt-parte-1-o-que-e-mqtt/" target="_blank" rel="noopener"><strong>MQTT</strong></a>, você usa um <strong>publish</strong>, ou seja, você faz uma <strong>publicação</strong> para o servidor <a href="https://blog.butecopensource.org/mqtt-parte-1-o-que-e-mqtt/" target="_blank" rel="noopener"><strong>MQTT</strong></a>, e se existe uma <strong>publicação</strong> ele precisa receber ela, ler e executar uma algo, correto?</p><p>É ai que entra o <strong>subscribe</strong>, ele basicamente, fica o tempo todo “<strong>ouvindo</strong>“ se existe novas publicações e se existe ele recebe, de acordo com o tópico e o conteúdo desta <strong>publicação</strong> você executa uma ação como por exemplo ligar uma luz, fechar um portão e etc.</p><p>No próprio GitHub deles, <a href="https://github.com/knolleary/pubsubclient/tree/master/examples" target="_blank" rel="noopener">existem ótimos exemplos</a> como usar com autenticação, sem e por ai vai.</p><p>Primeiro, você tem que incluir ele no seu código do Arduino, como?<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;PubSubClient.h&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>Depois você cria o client<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">PubSubClient <span class="title">client</span><span class="params">(server, <span class="number">1883</span>, CALLBACK_SUB, CLIENT_ETHERNET_OU_WIFI)</span></span>;</span><br></pre></td></tr></table></figure></p><h4 id="Publish"><a href="#Publish" class="headerlink" title="Publish"></a>Publish</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.publish(<span class="string">"tópico"</span>,<span class="string">"mensagem"</span>);</span><br></pre></td></tr></table></figure><h4 id="Subscribe"><a href="#Subscribe" class="headerlink" title="Subscribe"></a>Subscribe</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.subscribe(<span class="string">"tópico"</span>);</span><br></pre></td></tr></table></figure><p>Enfim, <a href="https://github.com/knolleary/pubsubclient/blob/master/examples/mqtt_auth/mqtt_auth.ino" target="_blank" rel="noopener">olhe este exemplo no Github deles</a>, é bem legal e você vai entender bem melhor, porquê criar o que já foi criado? Bora ganhar tempo galera.</p><p>Mesmo assim, ainda está com dificuldades? Bom, eu acho difícil isso estar acontecendo mas vamos lá, <a href="http://pubsubclient.knolleary.net/api.html" target="_blank" rel="noopener">aqui tem a documentação completa do PubSubClient</a>.</p><p>Pronto, foi? Deu certo? <strong>#tchaubrigado</strong></p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Precisando de um Cliente MQTT para usar no Arduino? Nós te ajudamos!
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Macro Request no Laravel</title>
    <link href="https://fazbe.github.io/Macro-Request-no-Laravel/"/>
    <id>https://fazbe.github.io/Macro-Request-no-Laravel/</id>
    <published>2017-02-16T17:07:45.000Z</published>
    <updated>2020-09-04T13:54:27.622Z</updated>
    
    <content type="html"><![CDATA[<p>Para mim uma das coisas mais fascinantes no <a href="https://laravel.com/docs/" target="_blank" rel="noopener">Laravel</a>, são os Macros, muito pouco falados na documentação (ou não), enfim, são demais.</p><p>Os Macros eles basicamente servem, para extender os métodos de uma biblioteca ou seja la o que for. Então, conseguimos criar “customizações” de acordo com a nossa necessidade.</p><p>Por aqui eu vou mostrar, como utilizar um Macro para o <a href="https://laravel.com/docs/requests" target="_blank" rel="noopener">Requests do Laravel</a>.</p><p>Primeiro, vamos criar um provider usando o artisan<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:provider MacroServiceProvider</span><br></pre></td></tr></table></figure></p><p>Depois de criado, vá na pasta <strong>config</strong>, abra o arquivo <strong>app.php</strong> e adicione o seguinte Provider<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">App\Providers\MacroServiceProvider::class,</span><br></pre></td></tr></table></figure></p><p>Isso, agora vá na pasta do seu projeto Laravel em <strong>app/Providers</strong> e abra o <strong>MacroServiceProvider.php</strong></p><p>Já abriu? Agora vamos adicionar a classe Request do Laravel para uso:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br></pre></td></tr></table></figure></p><p>O início do seu Provider ficará mais ou menos assim<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MacroServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>Certo, agora vamos criar o Macro, para isso <strong>dentro do método boot()</strong> coloque o seguinte código:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Request::macro(<span class="string">'isEdit'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;is(<span class="string">'/editar'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Para usar:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Com helper request() do Laravel para ser chamado em uma view por exemplo</span></span><br><span class="line"><span class="keyword">if</span>(request()-&gt;isEdit())</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"Estou editando o bagui"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Sem o helper</span></span><br><span class="line"><span class="keyword">if</span>($request-&gt;isEdit())</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"Estou editando o bagui"</span>);</span><br></pre></td></tr></table></figure></p><p>O que aconteceu ai? Eu explico! Quando chama o Macro <strong>isEdit()</strong> ele vai buscar usando o método <strong>is()</strong> do Request do Laravel, se a rota atual é a rota de edição retorna <strong>true</strong>, se não, <strong>false</strong>.</p><p>Quase tudo no Laravel tem Macros, olha só:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Routing</span>\<span class="title">UrlGenerator</span>;</span><br><span class="line">UrlGenerator::macro(<span class="string">'nomeMacro'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; ... &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Collection</span>;</span><br><span class="line">Collection::macro(<span class="string">'nomeMacro'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; ... &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Routing</span>\<span class="title">Router</span>;</span><br><span class="line">Router::macro(<span class="string">'nomeMacro'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; ... &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Str</span>;</span><br><span class="line">Str::macro(<span class="string">'nomeMacro'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; ... &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Arr</span>;</span><br><span class="line">Arr::macro(<span class="string">'nomeMacro'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; ... &#125;);</span><br></pre></td></tr></table></figure><p>… E muito mais!</p><p>Como eu descobri onde o Laravel usa Macros?</p><p>Não sei se foi a forma correta e blá blá blá mas para mim e minha equipe funcionou perfeitamente. O código principal do <a href="https://laravel.com/api" target="_blank" rel="noopener">Framework Laravel</a>, o núcleo dele, o chamado <a href="https://laravel.com/api" target="_blank" rel="noopener">Illuminate</a>, contém todas as classes e métodos utilizados, enfim o “coraçnao” do framework, você pode <a href="https://laravel.com/api" target="_blank" rel="noopener">acessá-lo aqui</a>.</p><p>Por exemplo, para o Request, normalmente é utilizado o <strong>Illuminate\Http\Request</strong>, se você abrir este arquivo, você verá que ele usa a <strong>Trait Macroable</strong> que é responsável pelos Macros, então adivinha meu chegado…<br><img src="/images/emojis/smirk.png" width="24" height="24" class="custom_class1 custom_class2 emoji nofancybox" title="smirk"> <img src="/images/emojis/wink.png" width="24" height="24" class="custom_class1 custom_class2 emoji nofancybox" title="wink"></p><p>Um exemplo real do uso de macros, é o pacote <a href="https://github.com/spatie/laravel-collection-macros" target="_blank" rel="noopener">Laravel Collection Macros</a> que falei no post anterior, <a href="https://github.com/spatie/laravel-collection-macros/blob/master/src/macros.php" target="_blank" rel="noopener">olha só o código dos macros dele</a>.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Saiba o que é e como funciona o Macro Request no Laravel
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Instalando, testando e conhecendo o MQTT no Ubuntu</title>
    <link href="https://fazbe.github.io/Instalando-testando-e-conhecendo-o-MQTT-no-Ubuntu/"/>
    <id>https://fazbe.github.io/Instalando-testando-e-conhecendo-o-MQTT-no-Ubuntu/</id>
    <published>2017-02-16T17:04:16.000Z</published>
    <updated>2020-09-04T13:54:17.431Z</updated>
    
    <content type="html"><![CDATA[<p>Já mostrei como <a href="/Instalando-o-MQTT-no-macOS">fazer no macOS</a>, no Ubuntu não é muito diferente, é até mais simples.</p><p>Primeiro passo, instalar o <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a> usando o <strong>apt-get</strong>.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mosquitto mosquitto-clients</span><br></pre></td></tr></table></figure></p><p>Simples, ou não? Use o <strong><em>mosquitto_sub</em></strong> e o <strong><em>mosquitto_pub</em></strong> para brincar e fazer seus testes!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Ubuntu work!"</span></span><br></pre></td></tr></table></figure><p>Quer proteger o seu <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a>?</p><p>Defina nas configurações do mosquitto para não aceitar usuários anônimos, abra o arquivo de configuração usando o <strong>editor vim</strong> mesmo.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mosquitto/mosquitto.conf</span><br></pre></td></tr></table></figure></p><p>ou</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mosquitto/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>E adicione (ou altere) a linha onde está o <strong>allow_anonymous</strong> para <strong>false</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_anonymous <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>Se estiver comentado, <strong>descomente</strong>! E se não existe a linha? <strong>Crie</strong>!</p><p>Depois, adicione a linha informando o local do seu arquivo de senhas<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password_file /etc/mosquitto/passwd</span><br></pre></td></tr></table></figure></p><p>Feito isto reinicie o Mosquitto:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mosquitto restart</span><br></pre></td></tr></table></figure></p><p>E agora, vamos adicionar um usuário e senha:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mosquitto_passwd -c /etc/mosquitto/passwd USUARIO</span><br></pre></td></tr></table></figure></p><p>Quando você pressionar RETURN/ENTER, ele vai pedir uma senha!<br>Defina uma senha, confirme e pressione RETURN/ENTER movamente.</p><p>E agora você precisa passar o usuário e senha nos seus testes!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home -u USUARIO -P SENHA</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Proteção sinistra!"</span> -u USUARIO -P SENHA</span><br></pre></td></tr></table></figure><p>Quer definir o HOST e a PORTA manualmente? Faça o seguinte:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home -h 127.0.0.1 -p 1883</span><br></pre></td></tr></table></figure></p><p>e também na publicação:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Wowwww padrim, to em casa!"</span> -h 127.0.0.1 -p 1883</span><br></pre></td></tr></table></figure></p><p>Gosta de <a href="http://pythonclub.com.br/" target="_blank" rel="noopener">Python</a> ou <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>? Então conheça o pacote <a href="https://pypi.python.org/pypi/paho-mqtt" target="_blank" rel="noopener">paho-mqtt</a> para <a href="http://pythonclub.com.br/" target="_blank" rel="noopener">Python</a> e o <a href="https://github.com/mqttjs/MQTT.js" target="_blank" rel="noopener">MQTT.js</a> para <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>, eles são uma belezura. Tem também para <a href="http://br.php.net/" target="_blank" rel="noopener">PHP</a> que é bem legal e funciona perfeitamente com a extensão <a href="https://github.com/mgdm/Mosquitto-PHP" target="_blank" rel="noopener">Mosquitto-PHP</a>, eu particularmente uso ele para comunicação com uma API desenvolvida para o <a href="https://laravel.com/docs" target="_blank" rel="noopener">Laravel</a>.</p><p>Quer finalizar o <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a>? Claro, somente se você quiser, não é necessário!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mosquitto stop</span><br></pre></td></tr></table></figure></p><p>Quer saber mais sobre Mosquitto e MQTT? Cola la no <a href="https://www.google.com.br/webhp?ion=1&amp;espv=2&amp;ie=UTF-8#q=mqtt" target="_blank" rel="noopener">google</a>, tem tudo!</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Instalando, testando e conhecendo o MQTT no Ubuntu
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Instalando, testando e conhecendo o MQTT no macOS</title>
    <link href="https://fazbe.github.io/Instalando-o-MQTT-no-macOS/"/>
    <id>https://fazbe.github.io/Instalando-o-MQTT-no-macOS/</id>
    <published>2017-02-16T17:03:26.000Z</published>
    <updated>2020-09-04T13:54:12.898Z</updated>
    
    <content type="html"><![CDATA[<p>Eu acredito que quem chegou até aqui, já saiba bastante sobre programação. Então não vou explicar o que é <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a>, <a href="https://blog.butecopensource.org/mqtt-parte-1-o-que-e-mqtt/" target="_blank" rel="noopener">MQTT</a> e nem <a href="http://brew.sh/index_pt-br.html" target="_blank" rel="noopener">Homebrew</a>, a idéia aqui é ser direto e mostrar como deixar as coisas funcionando.</p><p>Primeiro, vamos instalar o <a href="http://brew.sh/index_pt-br.html" target="_blank" rel="noopener">Homebrew</a>, caso não o tenha feito ainda.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></p><p>Segundo, vamos instalar o <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a> usando o <a href="http://brew.sh/index_pt-br.html" target="_blank" rel="noopener">Homebrew</a>.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mosquitto</span><br></pre></td></tr></table></figure></p><p>Quando termina a instalação, é mostrado como colocar para iniciar o MQTT server na inicialização do sistema. Simples!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/mosquitto/*.plist ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure></p><p>Então, precisamos iniciar o <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a>, certo? É mamão com açucar!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl load /usr/<span class="built_in">local</span>/Cellar/mosquitto/1.4.10_1/homebrew.mxcl.mosquitto.plist</span><br></pre></td></tr></table></figure></p><p>Legal né? Agora, você pode usar o <strong><em>mosquitto_sub</em></strong> e o <strong><em>mosquitto_pub</em></strong> para brincar e fazer seus testes!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Wowwww padrim, to em casa!"</span></span><br></pre></td></tr></table></figure><p>Opa, mas espera ai! Eu não quero o meu <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a> livre pra qualquer um acessar né? Bora colocar senha então!</p><p>Antes de mais nada, você precisa definir o mosquitto para <strong>não</strong> aceitar usuários anônimos, abra o arquivo de configuração usando o <strong>editor vim</strong> mesmo.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/<span class="built_in">local</span>/Cellar/mosquitto/1.4.10_1/etc/mosquitto/mosquitto.conf</span><br></pre></td></tr></table></figure></p><p>E adicione (ou altere) a linha onde está o <strong>allow_anonymous</strong> para <strong>false</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_anonymous <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>Se estiver comentado, descomente!<br>Feito isto reinicie o Mosquitto. Para tal, você pode parar e iniciar novamente o serviço usando os comandos citados no início e no fim deste artigo.</p><p>E agora, vamos adicionar um usuário e senha:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_passwd -c /usr/<span class="built_in">local</span>/Cellar/mosquitto/1.4.10_1/etc/mosquitto/pwfile USUARIO</span><br></pre></td></tr></table></figure></p><p>Quando você pressionar RETURN/ENTER, ele vai pedir uma senha!<br>Defina uma senha, confirme e pressione RETURN/ENTER movamente.</p><p>E agora você precisa passar o usuário e senha nos seus testes não é mesmo? Simples de novo!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home -u USUARIO -P SENHA</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Noh, agora to protegido!"</span> -u USUARIO -P SENHA</span><br></pre></td></tr></table></figure><p>Quer definir o HOST e a PORTA manualmente?<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -t topic/home -h 127.0.0.1 -p 1883</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -t topic/home -m <span class="string">"Wowwww padrim, to em casa!"</span> -h 127.0.0.1 -p 1883</span><br></pre></td></tr></table></figure><p>Gosta de <a href="http://pythonclub.com.br/" target="_blank" rel="noopener">Python</a> ou <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>? Então conheça o pacote <a href="https://pypi.python.org/pypi/paho-mqtt" target="_blank" rel="noopener">paho-mqtt</a> para <a href="http://pythonclub.com.br/" target="_blank" rel="noopener">Python</a> e o <a href="https://github.com/mqttjs/MQTT.js" target="_blank" rel="noopener">MQTT.js</a> para <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>, esses caras são demais. Tem também para <a href="http://br.php.net/" target="_blank" rel="noopener">PHP</a> que é bem legal e funciona perfeitamente com a extensão <a href="https://github.com/mgdm/Mosquitto-PHP" target="_blank" rel="noopener">Mosquitto-PHP</a>, eu particularmente uso ele para comunicação com uma API desenvolvida em <a href="https://laravel.com/docs" target="_blank" rel="noopener">Laravel</a>.</p><p>Cansou de brincar e fazer seus testes? Se quiser, pode finalizar o seu <a href="https://mosquitto.org/" target="_blank" rel="noopener">Mosquitto</a>!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl unload /usr/<span class="built_in">local</span>/Cellar/mosquitto/1.4.10_1/homebrew.mxcl.mosquitto.plist</span><br></pre></td></tr></table></figure></p><p>Quer saber mais sobre Mosquitto e MQTT? La no <a href="https://www.google.com.br/webhp?ion=1&amp;espv=2&amp;ie=UTF-8#q=mqtt" target="_blank" rel="noopener">google</a> tem muito material, até o que você não precisa saber e nunca vai usar na sua vida.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Instalando, testando e conhecendo o MQTT no macOS
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Instalando a extensão Mosquitto-PHP no Ubuntu</title>
    <link href="https://fazbe.github.io/Instalando-a-extensao-Mosquitto-PHP/"/>
    <id>https://fazbe.github.io/Instalando-a-extensao-Mosquitto-PHP/</id>
    <published>2017-02-16T17:00:26.000Z</published>
    <updated>2020-09-04T13:54:07.288Z</updated>
    
    <content type="html"><![CDATA[<p>E ai, bora instalar a extensão Mosquitto-PHP? Testado e sendo usado em <strong>dois servidores</strong> com Ubuntu 16+, um local e um externo. Não sabe a versão do seu? Use o comando no terminal:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure></p><p>O comando acima irá retornar algo como:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Distributor ID:Ubuntu</span><br><span class="line">Description:Ubuntu 16.04 LTS</span><br><span class="line">Release:16.04</span><br><span class="line">Codename:xenial</span><br></pre></td></tr></table></figure></p><p>Certo, chega de perder tempo olhando versão. Primeiro, temos que instalar o pacote libmosquitto-dev, em alguns sistemas derivados do Red Hat é provável que seja chamado de libmosquitto-devel, mas, se não for, tente a outra forma.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libmosquitto-dev</span><br></pre></td></tr></table></figure></p><p>Já ia me esquecendo, a primeira vez que fui instalar usando o PECL e seguindo o tutorial do próprio Github deles, não deu muito certo, eu tive que pesquisar e tentar outras maneiras, até que achei uma solução e funcionou, mas mesmo assim houve alguns problemas no decorrer da instalação, então, aqui eu mostro como instalei e funcionou sem nenhum problema e sem nenhum erro antes, durante e nem depois da instalação. <strong>Se der algum problema no seu, pesquise e ache uma solução</strong>, mas creio que dará tudo certo.</p><p>Agora vamos clonar o repositório da extensão para uma pasta qualquer, eu costumo jogar tudo na /tmp, mas é você quem decide.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/mgdm/Mosquitto-PHP.git</span><br></pre></td></tr></table></figure></p><p>E vamos entrar na pasta…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Mosquitto-PHP/</span><br></pre></td></tr></table></figure></p><p>E agora? Vamos instalar a extensão de fato.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpize</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-mosquitto=/path/to/libmosquitto</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>Em alguns casos, aqui não é necessário usar sudo, mas em outros é! Então, faça de acordo com sua máquina.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><p>Já instalado, está quase pronto. Agora precisamos ativar a extensão nas configurações (<strong>php.ini</strong>) do PHP. No meu caso, o PHP se encontra instalado em <strong>/etc/php/7.0/</strong>.</p><p>Abra e altere o arquivo php.ini. Se você não sabe como usar o vim, <a href="http://aurelio.net/vim/vim-basico.txt" target="_blank" rel="noopener">olhe aqui</a>.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/php/7.0/cli/php.ini</span><br></pre></td></tr></table></figure></p><p>E adicione a seguinte linha em extension no PHP Cli<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extension</span>=mosquitto.so</span><br></pre></td></tr></table></figure></p><p>Abra e altere o arquivo php.ini no FPM também.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/php/7.0/fpm/php.ini</span><br></pre></td></tr></table></figure></p><p>E adicione a seguinte linha em extension no PHP FPM<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=mosquitto.so</span><br></pre></td></tr></table></figure></p><p>Como usar? Darei um exemplo simples para ouvir o tópico “<strong>casa</strong>“<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Inicia o cliente</span></span><br><span class="line">$c = <span class="keyword">new</span> \Mosquitto\Client;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Se o seu mosquitto não possuir usuário e senha, basta remover a linha seguinte.</span></span><br><span class="line">$c-&gt;setCredentials(<span class="string">'USUARIO_MQTT'</span>, <span class="string">'SENHA_MQTT'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Conecta no broker/servidor mosquitto</span></span><br><span class="line">$c-&gt;connect(<span class="string">'IP_DO_MOSQUITTO'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quando usa o "#", você está dizendo que tudo que chegar para o subscribe após a / (barra), ele irá receber.</span></span><br><span class="line"><span class="comment">// Lembrando que você pode subscrever em vários tópicos, basta adicionar uma linha abaixo da outra.</span></span><br><span class="line">$c-&gt;subscribe(<span class="string">'casa/#'</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quando chegar uma mensagem ao subscribe no tópico "casa"</span></span><br><span class="line">$c-&gt;onMessage(<span class="function"><span class="keyword">function</span><span class="params">($m)</span> <span class="title">use</span> <span class="params">($c)</span> </span>&#123;</span><br><span class="line">    print_r($m);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Coloca em loop</span></span><br><span class="line">$c-&gt;loopForever(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p><p>Tudo beleza? Salve o aquivo acima como mqttext.php em algum lugar na sua máquina. Dai, corre no seu terminal e digita o seguinte:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php mqttext.php</span><br></pre></td></tr></table></figure></p><p>Envie uma publicação (usando o <a href="https://github.com/mqttjs/MQTT.js" target="_blank" rel="noopener">MQTT.js</a> ou o <a href="https://pypi.python.org/pypi/paho-mqtt" target="_blank" rel="noopener">paho-mqtt</a> ou qualquer outro que você quiser, só para teste) para o canal <strong>casa</strong> e veja a mágina acontecer.</p><p>E para publicar uma mensagem usando a extensão Mosquitto-PHP? Simples também!</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Inicia o cliente</span></span><br><span class="line">$c = <span class="keyword">new</span> Mosquitto\Client;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quando conectar, envia a publicação</span></span><br><span class="line">$c-&gt;onConnect(<span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($c)</span> </span>&#123;</span><br><span class="line">$c-&gt;publish(<span class="string">'casa/sala'</span>, <span class="string">'Enviando para a Sala da Casa'</span>, <span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Se o seu mosquitto não possuir usuário e senha, basta remover a linha seguinte.</span></span><br><span class="line">$c-&gt;setCredentials(<span class="string">'USUARIO_MQTT'</span>, <span class="string">'SENHA_MQTT'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Conecta no broker/servidor mosquitto</span></span><br><span class="line">$c-&gt;connect(<span class="string">'IP_DO_MOSQUITTO'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">100</span>; $i++) &#123;</span><br><span class="line"><span class="comment">// Necessário para que a extensão funcione</span></span><br><span class="line"><span class="comment">// Faz um loop até enviar</span></span><br><span class="line">$c-&gt;loop(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Salve o arquivo acima como mqttpub.php.</p><p>Faça um teste mais legal ainda, quando você instalou o broker mosquitto, ele vem com comandos para sub e pub, abra uma nova aba ou janela do seu terminal, e inicie o mosquitto_sub da seguinte maneira:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -h IP_DO_MOSQUITTO -t casa/# -q 1</span><br></pre></td></tr></table></figure></p><p>Caso tenha usuário e senha<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -h IP_DO_MOSQUITTO -t casa/# -q 1 -u USUARIO -P SENHA</span><br></pre></td></tr></table></figure></p><p>Beleza, ele vai rodar em loop, abra uma nova aba ou janela novamente, e execute o arquivo mqttpub.php que você criou ali em cima.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php mqttpub.php</span><br></pre></td></tr></table></figure></p><p>Repare que na aba onde está rodando o mosquitto_sub vai aparecer a mensagem “<strong>Enviando para a Sala da Casa</strong>“ publicada pelo mqttpub.php uando a extensão Mosquitto-PHP. Doido né?</p><p>Quer mais sobre a extensão Mosquitto-PHP? Então, <a href="https://github.com/mgdm/Mosquitto-PHP" target="_blank" rel="noopener">aqui está o Github</a> deles e <a href="http://mosquitto-php.readthedocs.io/en/latest/client.html" target="_blank" rel="noopener">aqui a documentação</a>.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Como instalar a extensão Mosquitto-PHP no Ubuntu
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Executando comandos de Apple Script no Node.js</title>
    <link href="https://fazbe.github.io/Executando-comandos-de-Apple-Script-no-Node-js/"/>
    <id>https://fazbe.github.io/Executando-comandos-de-Apple-Script-no-Node-js/</id>
    <published>2017-02-16T16:53:11.000Z</published>
    <updated>2020-09-04T13:53:57.004Z</updated>
    
    <content type="html"><![CDATA[<p>Para mim, automatizar tarefas no Mac é meio que uma diversão. Por exemplo, scripts para backup e sincronização no Google Drive, Dropbox e HD externo, envio de SMS quando tais backups chegam ao fim, execução de comandos bash personalizados e etc.</p><p>Recentemente criei um projeto em node que recebe comandos atavés de um <strong>MQTT Broker</strong> (usando publisher, claro!) que executa certas tarefas no Mac, uma vez que costumo sair do escritório e deixá-lo ligado. E o que mais uso, são <strong>Apple Scripts</strong>.</p><p>Precisei executar alguns <strong>Apple Scripts</strong> através do <strong>Node.js</strong> e encontrei a biblioteca <a href="https://www.npmjs.com/package/node-osascript" target="_blank" rel="noopener">node-osascript</a>, não tenho muito o que falar, só que funciona perfeitamente.</p><p>Enfim, aqui eu instalei o pacote global<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install node-osascript -g</span><br></pre></td></tr></table></figure></p><p>E para testar, crie um script (<a href="https://www.npmjs.com/package/node-osascript#simple" target="_blank" rel="noopener">o mesmo do exemplo na página do pacote</a>), porém mudei para ativar o Google Chrome. Se ele estiver fechado, será aberto e se já estiver aberto, será focado/ativado.</p><p>Salve o script abaixo como <strong>index.js</strong> em qualquer pasta que você quiser.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> osascript = <span class="built_in">require</span>(<span class="string">'node-osascript'</span>);</span><br><span class="line"> </span><br><span class="line">osascript.execute(<span class="string">'tell application "Chrome" to activate'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, result, raw</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="built_in">console</span>.error(err)</span><br><span class="line">  <span class="built_in">console</span>.log(result, raw)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Execute o script com o node e seja feliz.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node index.php</span><br></pre></td></tr></table></figure></p><p>Para ver como funciona, você pode testar o <strong>Apple Script</strong> sem o node, usando o terminal do Mac:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osascript -e <span class="string">'tell application "Chrome" to activate'</span></span><br></pre></td></tr></table></figure></p><p>Não gosto de usar aplicativos prontos pois, para começar eu nunca encontro um que me atenda da forma que preciso, além de alguns custarem um preço absurdo (eu pelo menos não pago). Segundo, é legal criar esses scripts e aprender um pouco mais sobre node, apple scripts, javascript e etc. E tem mais, porquê pagar 30.. 50 dólares se eu posso fazer a mesma coisa em algumas horas?</p><img src="/images/emojis/joy.png" width="32" height="32" class="custom_class1 custom_class2 emoji nofancybox" title="joy"><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Executando comandos de Apple Script no Node.js
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Diferenças entre os diversos modelos de Arduino</title>
    <link href="https://fazbe.github.io/Diferencas-entre-os-diversos-modelos-de-Arduino/"/>
    <id>https://fazbe.github.io/Diferencas-entre-os-diversos-modelos-de-Arduino/</id>
    <published>2017-02-16T16:45:44.000Z</published>
    <updated>2020-09-05T14:09:47.908Z</updated>
    
    <content type="html"><![CDATA[<p>O lance aqui hoje é rápido, você sabe a diferença entre os modelos de Arduino? Se não sabe, essa é a hora camarada.</p><p><img src="http://blog.filipeflop.com/wp-content/uploads/2014/02/Tabela-comparativa1.png" alt="I"></p><p>Essa tabela acima é bem legal, ela explica e resume tudo. Na empresa utilizamos muito o Nano, Pro Mini e o <a href="http://www.arduinoportugal.pt/temas/programar-arduino-no-nodemcu/" target="_blank" rel="noopener">NodeMCU</a> (que não está na lista) para produtos finais e o Uno para testes.</p><p>Mas, para mais detalhes você pode acessar ela lá no <a href="http://blog.filipeflop.com/arduino/tipos-de-arduino-qual-comprar.html" target="_blank" rel="noopener">Blog do FilipeFlop</a> e <a href="http://blog.filipeflop.com/wp-content/uploads/2014/02/Tabela-comparativa1.png" target="_blank" rel="noopener">aqui você pode ver</a> a imagem em tamanho real.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Saiba quais são as diferenças entre os diversos modelos de Arduino
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Criar uma paginação customizada no Laravel com dados de uma collection</title>
    <link href="https://fazbe.github.io/Criar-uma-paginacao-customizada-no-Laravel-com-dados-de-uma-collection/"/>
    <id>https://fazbe.github.io/Criar-uma-paginacao-customizada-no-Laravel-com-dados-de-uma-collection/</id>
    <published>2017-02-10T17:31:35.000Z</published>
    <updated>2020-09-04T13:53:46.797Z</updated>
    
    <content type="html"><![CDATA[<p>Talvez você seja um programador fodão em Laravel e fale “Mais isso todo mundo sabe fazer”. É ai que você se engana meu coleguinha, trabalho com Laravel a bastante tempo e posso dizer com toda certeza, muita gente tem dificuldade no momento de criar uma instância customizada de paginação com Laravel.</p><p>Logo abaixo, encontra-se uma função usando os recursos do Laravel, mas você pode criar uma classe, uma pacote ou seja la o que for necessário no seu caso.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'paginator_instance'</span>)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Cria uma intância personalizada do paginator, a qual pode ser usada em retornos de collect e retornis customizados</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  collect/model $items         Itens a serem paginados</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  array  $requests             Requests que devem ser passados na paginação, por exemplo, uma busca (query) e etc</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int $perPage                 Quantidade de itens por página</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int $currentPage             Página atual, normalmente vazio pois usa padrão do Laravel</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  array  $options              Opções de paginação, normalmente, usa o padrão do Laravel</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> paginator/collect            Paginator com resultados</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">paginator_instance</span><span class="params">($items, $requests = [], $perPage = <span class="number">10</span>, $currentPage = null, array $options = [])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// Monta $perPage</span></span><br><span class="line">        $perPage = $perPage;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Pega a página atual</span></span><br><span class="line">        <span class="comment">// Se não preenchido, usa o método resolveCurrentPage() da \Illuminate\Pagination\LengthAwarePaginator</span></span><br><span class="line">        $page = $currentPage ? $currentPage : \Illuminate\Pagination\LengthAwarePaginator::resolveCurrentPage();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Monta collection com itens para paginacao</span></span><br><span class="line">        $currentPageSearchResults = collect($items)-&gt;slice(($page - <span class="number">1</span>) * $perPage, $perPage)-&gt;all();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Cria a paginação</span></span><br><span class="line">        $paginator = (<span class="keyword">new</span> \Illuminate\Pagination\LengthAwarePaginator($currentPageSearchResults, count($items), $perPage, $page, $options &gt;= <span class="number">1</span> ? $options : [</span><br><span class="line">            <span class="string">'path'</span> =&gt; \Illuminate\Pagination\Paginator::resolveCurrentPath(),</span><br><span class="line">            <span class="string">'pageName'</span> =&gt; <span class="string">'page'</span>,</span><br><span class="line">        ]));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retorna os dados montado e com paginação</span></span><br><span class="line">        <span class="keyword">return</span> $paginator-&gt;appends($requests);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Fácil né? Poisé!<br>Entenda melhor a classe <a href="https://laravel.com/api/5.4/Illuminate/Pagination/LengthAwarePaginator.html" target="_blank" rel="noopener"><strong>LengthAwarePaginator</strong></a> e <a href="https://github.com/laravel/framework/blob/5.4/src/Illuminate/Pagination/LengthAwarePaginator.php" target="_blank" rel="noopener">aqui você pode ver</a> o arquivo completo no Github.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Criar uma paginação customizada no Laravel com dados de uma collection
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Alterar Collection de uma tabela no MySQL</title>
    <link href="https://fazbe.github.io/Alterar-Collection-de-uma-tabela-no-MySQL/"/>
    <id>https://fazbe.github.io/Alterar-Collection-de-uma-tabela-no-MySQL/</id>
    <published>2017-02-08T19:07:50.000Z</published>
    <updated>2020-09-04T13:53:39.327Z</updated>
    
    <content type="html"><![CDATA[<p> Com a chegada do Laravel 5.4, nós preferimos mudar a collection de algumas tabelas do nosso banco de dados, não vou explicar o que mudou, nem o porquê, mas você <a href="https://laravel.com/docs/5.4/releases" target="_blank" rel="noopener">pode ver aqui</a>.</p><p> Mas, para tal ação é só executar a seguinte query no console do MySQL ou no seu gerenciador preferido de banco de dados.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE  SUA_TABELA CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><p>É isso, sem muita frescura.</p><hr><p>Dicas por Gercil Junio - <a href="https://gercil.me" target="_blank" rel="noopener">https://gercil.me</a></p>]]></content>
    
    <summary type="html">
    
      Saiba como alterar a collection de uma tabela no MySQL.
    
    </summary>
    
    
  </entry>
  
</feed>
